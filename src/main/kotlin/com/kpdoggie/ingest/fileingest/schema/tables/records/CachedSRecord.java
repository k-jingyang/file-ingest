/*
 * This file is generated by jOOQ.
 */
package com.kpdoggie.ingest.fileingest.schema.tables.records;


import com.kpdoggie.ingest.fileingest.schema.tables.CachedS;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CachedSRecord extends UpdatableRecordImpl<CachedSRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = -2092053254;

    /**
     * Setter for <code>PUBLIC.CACHED_S.S_ID</code>.
     */
    public void setSId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.CACHED_S.S_ID</code>.
     */
    public Integer getSId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.CACHED_S.S_NAME</code>.
     */
    public void setSName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.CACHED_S.S_NAME</code>.
     */
    public String getSName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CachedS.CACHED_S.S_ID;
    }

    @Override
    public Field<String> field2() {
        return CachedS.CACHED_S.S_NAME;
    }

    @Override
    public Integer component1() {
        return getSId();
    }

    @Override
    public String component2() {
        return getSName();
    }

    @Override
    public Integer value1() {
        return getSId();
    }

    @Override
    public String value2() {
        return getSName();
    }

    @Override
    public CachedSRecord value1(Integer value) {
        setSId(value);
        return this;
    }

    @Override
    public CachedSRecord value2(String value) {
        setSName(value);
        return this;
    }

    @Override
    public CachedSRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CachedSRecord
     */
    public CachedSRecord() {
        super(CachedS.CACHED_S);
    }

    /**
     * Create a detached, initialised CachedSRecord
     */
    public CachedSRecord(Integer sId, String sName) {
        super(CachedS.CACHED_S);

        set(0, sId);
        set(1, sName);
    }
}
