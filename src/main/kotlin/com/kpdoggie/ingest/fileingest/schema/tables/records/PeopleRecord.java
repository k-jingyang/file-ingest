/*
 * This file is generated by jOOQ.
 */
package com.kpdoggie.ingest.fileingest.schema.tables.records;


import com.kpdoggie.ingest.fileingest.schema.tables.People;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PeopleRecord extends UpdatableRecordImpl<PeopleRecord> implements Record5<Integer, String, String, LocalDate, Integer> {

    private static final long serialVersionUID = 1554747641;

    /**
     * Setter for <code>PUBLIC.PEOPLE.PERSON_ID</code>.
     */
    public void setPersonId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.PEOPLE.PERSON_ID</code>.
     */
    public Integer getPersonId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.PEOPLE.NAME</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.PEOPLE.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.PEOPLE.GENDER</code>.
     */
    public void setGender(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.PEOPLE.GENDER</code>.
     */
    public String getGender() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.PEOPLE.DOB</code>.
     */
    public void setDob(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.PEOPLE.DOB</code>.
     */
    public LocalDate getDob() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>PUBLIC.PEOPLE.AGE</code>.
     */
    public void setAge(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.PEOPLE.AGE</code>.
     */
    public Integer getAge() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, LocalDate, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, LocalDate, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return People.PEOPLE.PERSON_ID;
    }

    @Override
    public Field<String> field2() {
        return People.PEOPLE.NAME;
    }

    @Override
    public Field<String> field3() {
        return People.PEOPLE.GENDER;
    }

    @Override
    public Field<LocalDate> field4() {
        return People.PEOPLE.DOB;
    }

    @Override
    public Field<Integer> field5() {
        return People.PEOPLE.AGE;
    }

    @Override
    public Integer component1() {
        return getPersonId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getGender();
    }

    @Override
    public LocalDate component4() {
        return getDob();
    }

    @Override
    public Integer component5() {
        return getAge();
    }

    @Override
    public Integer value1() {
        return getPersonId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getGender();
    }

    @Override
    public LocalDate value4() {
        return getDob();
    }

    @Override
    public Integer value5() {
        return getAge();
    }

    @Override
    public PeopleRecord value1(Integer value) {
        setPersonId(value);
        return this;
    }

    @Override
    public PeopleRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public PeopleRecord value3(String value) {
        setGender(value);
        return this;
    }

    @Override
    public PeopleRecord value4(LocalDate value) {
        setDob(value);
        return this;
    }

    @Override
    public PeopleRecord value5(Integer value) {
        setAge(value);
        return this;
    }

    @Override
    public PeopleRecord values(Integer value1, String value2, String value3, LocalDate value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PeopleRecord
     */
    public PeopleRecord() {
        super(People.PEOPLE);
    }

    /**
     * Create a detached, initialised PeopleRecord
     */
    public PeopleRecord(Integer personId, String name, String gender, LocalDate dob, Integer age) {
        super(People.PEOPLE);

        set(0, personId);
        set(1, name);
        set(2, gender);
        set(3, dob);
        set(4, age);
    }
}
