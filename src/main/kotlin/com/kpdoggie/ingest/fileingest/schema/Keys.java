/*
 * This file is generated by jOOQ.
 */
package com.kpdoggie.ingest.fileingest.schema;


import com.kpdoggie.ingest.fileingest.schema.tables.CachedS;
import com.kpdoggie.ingest.fileingest.schema.tables.CachedSs;
import com.kpdoggie.ingest.fileingest.schema.tables.records.CachedSRecord;
import com.kpdoggie.ingest.fileingest.schema.tables.records.CachedSsRecord;

import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>PUBLIC</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CachedSRecord, Integer> IDENTITY_CACHED_S = Identities0.IDENTITY_CACHED_S;
    public static final Identity<CachedSsRecord, Integer> IDENTITY_CACHED_SS = Identities0.IDENTITY_CACHED_SS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CachedSRecord> CONSTRAINT_1 = UniqueKeys0.CONSTRAINT_1;
    public static final UniqueKey<CachedSsRecord> CONSTRAINT_8 = UniqueKeys0.CONSTRAINT_8;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CachedSRecord, Integer> IDENTITY_CACHED_S = Internal.createIdentity(CachedS.CACHED_S, CachedS.CACHED_S.S_ID);
        public static Identity<CachedSsRecord, Integer> IDENTITY_CACHED_SS = Internal.createIdentity(CachedSs.CACHED_SS, CachedSs.CACHED_SS.SS_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CachedSRecord> CONSTRAINT_1 = Internal.createUniqueKey(CachedS.CACHED_S, "CONSTRAINT_1", new TableField[] { CachedS.CACHED_S.S_ID }, true);
        public static final UniqueKey<CachedSsRecord> CONSTRAINT_8 = Internal.createUniqueKey(CachedSs.CACHED_SS, "CONSTRAINT_8", new TableField[] { CachedSs.CACHED_SS.SS_ID }, true);
    }
}
