/*
 * This file is generated by jOOQ.
 */
package com.kpdoggie.ingest.fileingest.schema;


import com.kpdoggie.ingest.fileingest.schema.tables.CachedMapping;
import com.kpdoggie.ingest.fileingest.schema.tables.CachedS;
import com.kpdoggie.ingest.fileingest.schema.tables.CachedSs;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = -1662198984;

    /**
     * The reference instance of <code>PUBLIC</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>PUBLIC.CACHED_MAPPING</code>.
     */
    public final CachedMapping CACHED_MAPPING = CachedMapping.CACHED_MAPPING;

    /**
     * The table <code>PUBLIC.CACHED_S</code>.
     */
    public final CachedS CACHED_S = CachedS.CACHED_S;

    /**
     * The table <code>PUBLIC.CACHED_SS</code>.
     */
    public final CachedSs CACHED_SS = CachedSs.CACHED_SS;

    /**
     * No further instances allowed
     */
    private Public() {
        super("PUBLIC", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            CachedMapping.CACHED_MAPPING,
            CachedS.CACHED_S,
            CachedSs.CACHED_SS);
    }
}
