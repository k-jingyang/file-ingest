/*
 * This file is generated by jOOQ.
 */
package com.kpdoggie.ingest.fileingest.schema.tables.records;


import com.kpdoggie.ingest.fileingest.schema.tables.CachedMapping;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CachedMappingRecord extends TableRecordImpl<CachedMappingRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = -1133966080;

    /**
     * Setter for <code>PUBLIC.CACHED_MAPPING.S_ID</code>.
     */
    public void setSId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.CACHED_MAPPING.S_ID</code>.
     */
    public Integer getSId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.CACHED_MAPPING.SS_ID</code>.
     */
    public void setSsId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.CACHED_MAPPING.SS_ID</code>.
     */
    public Integer getSsId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>PUBLIC.CACHED_MAPPING.MAPPED_S_ID</code>.
     */
    public void setMappedSId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.CACHED_MAPPING.MAPPED_S_ID</code>.
     */
    public Integer getMappedSId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CachedMapping.CACHED_MAPPING.S_ID;
    }

    @Override
    public Field<Integer> field2() {
        return CachedMapping.CACHED_MAPPING.SS_ID;
    }

    @Override
    public Field<Integer> field3() {
        return CachedMapping.CACHED_MAPPING.MAPPED_S_ID;
    }

    @Override
    public Integer component1() {
        return getSId();
    }

    @Override
    public Integer component2() {
        return getSsId();
    }

    @Override
    public Integer component3() {
        return getMappedSId();
    }

    @Override
    public Integer value1() {
        return getSId();
    }

    @Override
    public Integer value2() {
        return getSsId();
    }

    @Override
    public Integer value3() {
        return getMappedSId();
    }

    @Override
    public CachedMappingRecord value1(Integer value) {
        setSId(value);
        return this;
    }

    @Override
    public CachedMappingRecord value2(Integer value) {
        setSsId(value);
        return this;
    }

    @Override
    public CachedMappingRecord value3(Integer value) {
        setMappedSId(value);
        return this;
    }

    @Override
    public CachedMappingRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CachedMappingRecord
     */
    public CachedMappingRecord() {
        super(CachedMapping.CACHED_MAPPING);
    }

    /**
     * Create a detached, initialised CachedMappingRecord
     */
    public CachedMappingRecord(Integer sId, Integer ssId, Integer mappedSId) {
        super(CachedMapping.CACHED_MAPPING);

        set(0, sId);
        set(1, ssId);
        set(2, mappedSId);
    }
}
